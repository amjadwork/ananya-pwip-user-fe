import React from "react";
import Head from "next/head";
import { useRouter } from "next/router";

// Import Components
import { Header } from "@/components/Header";

// Import Containers
import { UserTypeContainer } from "@/containers/ec/UserType";
import { DateContainer } from "@/containers/ec/Date";
import { CompanyContainer } from "@/containers/ec/Company";
// Import Layouts

const basic = [
  {
    title: "I am a",
    type: "userType",
  },
  {
    title: "Choose a date",
    type: "date",
  },
  {
    title: "My company is",
    type: "company",
  },
];

export default function ExportCosting() {
  const router = useRouter();

  const [userType, setUserType] = React.useState(null);
  const [choosenDate, setChoosenDate] = React.useState(new Date());
  const [companyName, setCompanyName] = React.useState("");
  const [activeStep, setActiveStep] = React.useState(0);

  const handleTypeSelection = (index) => {
    setUserType(index);
  };

  const handleStepNavigation = () => {
    let count = activeStep;

    if (count >= 0 && count < basic.length - 1) {
      count = count + 1;
      setActiveStep(count);
    }
  };

  const handleBack = () => {
    let count = activeStep;

    if (count >= 0 && count <= basic.length - 1) {
      count = count - 1;
      setActiveStep(count);
    }
  };

  return (
    <React.Fragment>
      <Head>
        <meta charSet="utf-8" />
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"
        />

        <title>Export Costing by pwip</title>

        <meta name="Reciplay" content="Reciplay" />
        <meta name="description" content="Generated by create next app" />

        <meta name="mobile-web-app-capable" content="yes" />
        <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta
          name="apple-mobile-web-app-status-bar-style"
          content="black-translucent"
        />

        <link rel="manifest" href="/manifest.json" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div
        className="h-screen w-screen inline-flex flex-col relative"
        style={{ background: `linear-gradient(180deg, #2373bf, #60baf7)` }}
      >
        {activeStep !== 0 && (
          <Header
            backgroundColor="bg-[transparent]"
            hideLogo={true}
            handleBack={handleBack}
          />
        )}
        <div className="inline-flex flex-col relative w-full h-full px-5 py-16">
          <div className="w-full min-h-[56px]">
            {activeStep === 0 && (
              <span className="line-clamp-1 font-regular text-gray-300 text-lg">
                Answer all the questions to generate your export costing
              </span>
            )}
          </div>
          <div className="inline-flex flex-col justify-between items-center h-full w-full relative mt-10">
            <div className="inline-flex flex-col justify-start items-start h-full w-full space-y-8 relative">
              <span className="line-clamp-1 font-bold text-gray-200 text-[32px] opacity-[0.75]">
                {basic[activeStep].title}
              </span>

              {activeStep === 0 ? (
                <UserTypeContainer
                  handleTypeSelection={handleTypeSelection}
                  userType={userType}
                />
              ) : activeStep === 1 ? (
                <DateContainer
                  choosenDate={choosenDate}
                  setChoosenDate={setChoosenDate}
                />
              ) : (
                <CompanyContainer
                  setCompanyName={setCompanyName}
                  companyName={companyName}
                />
              )}
            </div>

            <button
              onClick={() => {
                if (activeStep === 0 && userType !== null && userType >= 0) {
                  handleStepNavigation();
                }

                if (activeStep === 1 && choosenDate) {
                  handleStepNavigation();
                }

                if (activeStep === 2 && companyName !== "") {
                  router.push("export-costing/forms");
                }
              }}
              className="w-full rounded-full py-3 px-4 bg-[#ffffff] text-[#262727] text-center text-md font-semibold"
              disabled={
                (activeStep === 0 && userType !== null && userType >= 0) ||
                (activeStep === 1 && choosenDate) ||
                (activeStep === 2 && companyName !== "")
                  ? false
                  : true
              }
              style={{
                opacity:
                  (activeStep === 0 && userType !== null && userType >= 0) ||
                  (activeStep === 1 && choosenDate) ||
                  (activeStep === 2 && companyName !== "")
                    ? 1
                    : 0.75,
              }}
            >
              Next
            </button>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}
