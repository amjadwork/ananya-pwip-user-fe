import React, { useEffect, useState } from "react";
import {
  contactFields,
  contactFieldsHeading,
} from "@/constants/profileFormFields";

import Head from "next/head";
import { useOverlayContext } from "@/context/OverlayContext";
import { useSession, signIn } from "next-auth/react";
import { useSelector, useDispatch } from "react-redux";
// import Slider from "react-slick";
import { useRouter } from "next/router";

import {
  handleSettingAuthDataRequest,
  handleSettingAuthDataSuccess,
} from "redux/actions/auth.actions";
import { fetchProfileRequest } from "@/redux/actions/profileEdit.actions";
import { fetchUserRequest } from "@/redux/actions/userEdit.actions";

//  import ProfileDetailForm from "@/components/ProfileDetailForm";

export default function Home() {
  const router = useRouter();
  const { data: session, status } = useSession();
  const dispatch = useDispatch();

  const authToken = useSelector((state) => state.auth.token);
  const authUser = useSelector((state) => state.auth.user);
  const profileObject = useSelector((state) => state.profile);
  const userObject = useSelector((state) => state.user);

  const {
    openBottomSheet,
    closeBottomSheet,
    startLoading,
    stopLoading,
    isLoading,
  } = useOverlayContext();

  // const [activeSlide, setActiveSlide] = useState(0);
  // const [showUserDetailForm, setShowUserDetailForm] = useState(false);

  useEffect(() => {
    if (status !== "authenticated" || !session?.accessToken) {
      router.replace("/");
    }
  }, [status, session?.accessToken]);

  const handleNavigation = (path) => {
    router.push(path);
  };

  return (
    <React.Fragment>
      <Head>
        <meta charSet="utf-8" />
        <title>Home | pwip - Export Costing </title>

        <meta name="PWIP Exports" content="PWIP Exports" />
        <meta name="description" content="Generated by create next app" />

        <meta name="mobile-web-app-capable" content="yes" />
        <meta name="apple-mobile-web-app-capable" content="yes" />
        {/*<meta
          name="apple-mobile-web-app-status-bar-style"
          content="black-translucent"
        />
*/}
        <meta name="apple-mobile-web-app-status-bar-style" content="default" />

        {/* <link rel="manifest" href="/manifest.json" /> */}
        {/* <link rel="icon" href="/favicon.ico" /> */}
      </Head>

      <div className="min-h-screen flex flex-col items-center bg-white pb-[82px] hide-scroll-bar justify-between">
        <div className="inline-flex flex-col items-center h-full w-full">
          <div className="inline-flex justify-start items-center w-full px-5 py-3">
            <img
              src="/assets/images/logo-blue.png"
              className="h-[38px] w-[38px]"
            />
          </div>

          <div className="relative w-full h-full mt-[8px] px-5 space-y-8">
            <div className="inline-flex w-full items-center justify-center">
              <div
                className={`mb-0 font-sans font-bold text-lg text-pwip-black-600 text-left inline-flex w-full flex-col space-y-3 transition-all`}
              >
                <h2 className="text-xl">
                  How we help in your export business?
                </h2>
                <span className="text-xs leading-5 font-normal text-pwip-v2-gray-800">
                  We assist in staying ahead in business deals with PWIP:
                  Estimating export costing, accessing weekly estimated rice
                  prices with properties and past data, OFC and providing
                  insights into EXIM analytics. Stay updated and make informed
                  decisions effortlessly.
                </span>
              </div>
            </div>

            <div className="w-full z-0">
              <img src="/assets/images/onboarding/features.png" />
            </div>
          </div>
        </div>

        <div className="fixed bottom-0 left-0 px-5 py-4 w-full inline-flex flex-col items-center justify-center space-y-[24px] mt-[42px] bg-white">
          <button
            onClick={() => {
              handleNavigation("/home");
            }}
            className="w-full rounded-md py-3 px-4 bg-pwip-v2-primary-600 text-pwip-white-100 text-center text-sm font-bold"
          >
            Continue
          </button>
        </div>
      </div>
    </React.Fragment>
  );
}

// export async function getServerSideProps(context) {
//   const session = await getSession(context);

//   // const cookies = parse(context.req.headers.cookie || "");
//   // const lastVisitedPage = cookies?.lastVisitedPage || "/export-costing";

//   if (session?.accessToken) {
//     return {
//       props: {
//         session: session || null,
//       },
//       redirect: {
//         destination: "/export-costing",
//       },
//     };
//   }
//   if (!session?.accessToken) {
//     return {
//       props: {
//         session: null,
//       },
//     };
//   }
// }
