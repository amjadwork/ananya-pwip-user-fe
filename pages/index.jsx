import React, { useEffect, useState } from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import { useSession, signIn } from "next-auth/react";
import { useDispatch } from "react-redux";

import { setAuthData } from "redux/actions/auth.actions";

export default function Home() {
  const router = useRouter();
  const { data: session } = useSession();
  const dispatch = useDispatch();

  const [active, setActive] = useState(0);

  const handleNavigation = (path) => {
    router.push(path);
  };

  const handleLogin = async () => {
    try {
      const callbackUrl = process.env.AUTH0_ISSUER_BASE_URL; //"dev-342qasi42nz80wtj.us.auth0.com";
      await signIn("auth0", { callbackUrl });
    } catch (error) {
      console.error("Error during login:", error);
    }
  };

  const redirectToApp = async () => {
    try {
      handleNavigation("/export-costing");
    } catch (error) {
      console.error("Error during login:", error);
    }
  };

  useEffect(() => {
    if (session && session.accessToken) {
      dispatch(setAuthData(session.user, session.accessToken));
      redirectToApp();
    }
  }, [session]);

  const onboardingIndex = [0, 1, 2];

  useEffect(() => {
    const interval = setInterval(() => {
      setActive((prevActive) => (prevActive + 1) % onboardingIndex.length);
    }, 2000);

    return () => {
      clearInterval(interval);
    };
  }, []);

  return (
    <React.Fragment>
      <Head>
        <meta charSet="utf-8" />
        <title>Home | pwip - Export Costing </title>

        <meta name="Reciplay" content="Reciplay" />
        <meta name="description" content="Generated by create next app" />

        <meta name="mobile-web-app-capable" content="yes" />
        <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta
          name="apple-mobile-web-app-status-bar-style"
          content="black-translucent"
        />

        <link rel="manifest" href="/manifest.json" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="min-h-screen flex flex-col items-center justify-between pb-[112px] pt-8 px-4">
        <div className="inline-flex flex-col items-center h-full w-full">
          <img
            src="/assets/images/logo-blue.png"
            className="h-[66px] w-[66px]"
          />

          <div className="relative w-full h-full mt-[60px]">
            <div className="relative h-full overflow-hidden rounded-lg">
              <div className="duration-700 ease-in-out h-[250px]">
                <img
                  src="/assets/images/onboarding1.svg"
                  className={`absolute block -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2 h-[250px] w-[212px] ${
                    active === 0 ? "block" : "hidden"
                  }`}
                  alt="onboarding 1 image"
                />

                <img
                  src="/assets/images/onboarding2.svg"
                  className={`absolute block -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2 h-[250px] w-[212px] ${
                    active === 1 ? "block" : "hidden"
                  }`}
                  alt="onboarding 2 image"
                />

                <img
                  src="/assets/images/onboarding2.svg"
                  className={`absolute block -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2 h-[250px] w-[212px] ${
                    active === 2 ? "block" : "hidden"
                  }`}
                  alt="onboarding 3 image"
                />
              </div>
            </div>
            <div className="flex items-center justify-center space-x-3 w-full mt-[48px]">
              <button
                type="button"
                onClick={() => setActive(0)}
                className={`w-5 h-2 rounded-full bg-pwip-primary ${
                  active !== 0 ? "bg-opacity-30" : ""
                }`}
              ></button>

              <button
                type="button"
                onClick={() => setActive(1)}
                className={`w-5 h-2 rounded-full bg-pwip-primary ${
                  active !== 1 ? "bg-opacity-30" : ""
                }`}
              ></button>

              <button
                type="button"
                onClick={() => setActive(2)}
                className={`w-5 h-2 rounded-full bg-pwip-primary ${
                  active !== 2 ? "bg-opacity-30" : ""
                }`}
              ></button>
            </div>
          </div>

          <div className="inline-flex w-full items-center justify-center mt-[30px]">
            <p
              className={`mb-0 font-sans font-bold text-lg text-pwip-primary text-center ${
                active === 0 ? "block" : "hidden"
              }`}
            >
              Say goodbye to spreadsheets and calculators!
            </p>

            <p
              className={`mb-0 font-sans font-bold text-lg text-pwip-primary text-center ${
                active === 1 ? "block" : "hidden"
              }`}
            >
              Get Accurate Quotes by Just Entering Rice and Destination Port
            </p>

            <p
              className={`mb-0 font-sans font-bold text-lg text-pwip-primary text-center ${
                active === 2 ? "block" : "hidden"
              }`}
            >
              Customize the costing, and share or download with your customer
            </p>
          </div>
        </div>

        <button
          onClick={() => handleLogin()}
          className="w-full rounded-md py-3 px-4 bg-pwip-primary text-pwip-white-100 text-center text-sm font-bold"
        >
          Login / Sign up
        </button>
      </div>
    </React.Fragment>
  );
}
